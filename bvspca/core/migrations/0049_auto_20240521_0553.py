# Generated by Django 3.2.25 on 2024-05-21 11:53

import bvspca.core.blocks
from django.db import migrations
import wagtail.blocks
import wagtail.contrib.table_block.blocks
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0048_supporterspage_body'),
    ]

    operations = [
        migrations.AlterField(
            model_name='contactformpage',
            name='column_1',
            field=wagtail.fields.StreamField([('heading_block', wagtail.blocks.StructBlock([('heading_text', wagtail.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.blocks.ChoiceBlock(blank=True, choices=[('', 'Select a header size'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4')], required=False))])), ('paragraph_block', wagtail.blocks.RichTextBlock(icon='fa-paragraph', label='Paragraph')), ('image_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.blocks.CharBlock(required=False)), ('attribution', wagtail.blocks.CharBlock(required=False))])), ('document_block', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock(required=True))])), ('external_link', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('url', wagtail.blocks.URLBlock())])), ('block_quote', wagtail.blocks.StructBlock([('text', wagtail.blocks.TextBlock()), ('attribute_name', wagtail.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))])), ('embed_block', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-external-link-square', label='Embedded Media', template='core/blocks/embed_block.html')), ('table_block', wagtail.blocks.StructBlock([('table', wagtail.contrib.table_block.blocks.TableBlock()), ('caption', wagtail.blocks.CharBlock(required=False))])), ('raw_html', wagtail.blocks.StructBlock([('html', wagtail.blocks.RawHTMLBlock())])), ('donate_button', wagtail.blocks.StructBlock([('button_name', wagtail.blocks.CharBlock(default='Donate5.png'))])), ('accordion', bvspca.core.blocks.AccordionBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('content', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'bold', 'italic', 'link', 'document-link', 'ol', 'ul', 'blockquote', 'hr', 'superscript', 'subscript', 'image']))])))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='contactformpage',
            name='column_2',
            field=wagtail.fields.StreamField([('heading_block', wagtail.blocks.StructBlock([('heading_text', wagtail.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.blocks.ChoiceBlock(blank=True, choices=[('', 'Select a header size'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4')], required=False))])), ('paragraph_block', wagtail.blocks.RichTextBlock(icon='fa-paragraph', label='Paragraph')), ('image_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.blocks.CharBlock(required=False)), ('attribution', wagtail.blocks.CharBlock(required=False))])), ('document_block', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock(required=True))])), ('external_link', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('url', wagtail.blocks.URLBlock())])), ('block_quote', wagtail.blocks.StructBlock([('text', wagtail.blocks.TextBlock()), ('attribute_name', wagtail.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))])), ('embed_block', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-external-link-square', label='Embedded Media', template='core/blocks/embed_block.html')), ('table_block', wagtail.blocks.StructBlock([('table', wagtail.contrib.table_block.blocks.TableBlock()), ('caption', wagtail.blocks.CharBlock(required=False))])), ('raw_html', wagtail.blocks.StructBlock([('html', wagtail.blocks.RawHTMLBlock())])), ('donate_button', wagtail.blocks.StructBlock([('button_name', wagtail.blocks.CharBlock(default='Donate5.png'))])), ('accordion', bvspca.core.blocks.AccordionBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('content', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'bold', 'italic', 'link', 'document-link', 'ol', 'ul', 'blockquote', 'hr', 'superscript', 'subscript', 'image']))])))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='contentpage',
            name='attachments',
            field=wagtail.fields.StreamField([('document', wagtail.documents.blocks.DocumentChooserBlock(icon='fa-file-text'))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='contentpage',
            name='body',
            field=wagtail.fields.StreamField([('heading_block', wagtail.blocks.StructBlock([('heading_text', wagtail.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.blocks.ChoiceBlock(blank=True, choices=[('', 'Select a header size'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4')], required=False))])), ('paragraph_block', wagtail.blocks.RichTextBlock(icon='fa-paragraph', label='Paragraph')), ('image_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.blocks.CharBlock(required=False)), ('attribution', wagtail.blocks.CharBlock(required=False))])), ('document_block', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock(required=True))])), ('external_link', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('url', wagtail.blocks.URLBlock())])), ('block_quote', wagtail.blocks.StructBlock([('text', wagtail.blocks.TextBlock()), ('attribute_name', wagtail.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))])), ('embed_block', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-external-link-square', label='Embedded Media', template='core/blocks/embed_block.html')), ('table_block', wagtail.blocks.StructBlock([('table', wagtail.contrib.table_block.blocks.TableBlock()), ('caption', wagtail.blocks.CharBlock(required=False))])), ('raw_html', wagtail.blocks.StructBlock([('html', wagtail.blocks.RawHTMLBlock())])), ('donate_button', wagtail.blocks.StructBlock([('button_name', wagtail.blocks.CharBlock(default='Donate5.png'))])), ('accordion', bvspca.core.blocks.AccordionBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('content', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'bold', 'italic', 'link', 'document-link', 'ol', 'ul', 'blockquote', 'hr', 'superscript', 'subscript', 'image']))])))], blank=True, use_json_field=True, verbose_name='Page body'),
        ),
        migrations.AlterField(
            model_name='homepage',
            name='slider',
            field=wagtail.fields.StreamField([('slider_item', wagtail.blocks.StructBlock([('photo', wagtail.images.blocks.ImageChooserBlock(help_text='This image MUST BE EXACTLY 1400px by 550px')), ('page', wagtail.blocks.PageChooserBlock(required=False)), ('external_url', wagtail.blocks.URLBlock(required=False)), ('active', wagtail.blocks.BooleanBlock(required=False))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='supporterspage',
            name='body',
            field=wagtail.fields.StreamField([('heading_block', wagtail.blocks.StructBlock([('heading_text', wagtail.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.blocks.ChoiceBlock(blank=True, choices=[('', 'Select a header size'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4')], required=False))])), ('paragraph_block', wagtail.blocks.RichTextBlock(icon='fa-paragraph', label='Paragraph')), ('image_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.blocks.CharBlock(required=False)), ('attribution', wagtail.blocks.CharBlock(required=False))])), ('document_block', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock(required=True))])), ('external_link', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('url', wagtail.blocks.URLBlock())])), ('block_quote', wagtail.blocks.StructBlock([('text', wagtail.blocks.TextBlock()), ('attribute_name', wagtail.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))])), ('embed_block', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-external-link-square', label='Embedded Media', template='core/blocks/embed_block.html')), ('table_block', wagtail.blocks.StructBlock([('table', wagtail.contrib.table_block.blocks.TableBlock()), ('caption', wagtail.blocks.CharBlock(required=False))])), ('raw_html', wagtail.blocks.StructBlock([('html', wagtail.blocks.RawHTMLBlock())])), ('donate_button', wagtail.blocks.StructBlock([('button_name', wagtail.blocks.CharBlock(default='Donate5.png'))])), ('accordion', bvspca.core.blocks.AccordionBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('content', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'bold', 'italic', 'link', 'document-link', 'ol', 'ul', 'blockquote', 'hr', 'superscript', 'subscript', 'image']))])))], blank=True, use_json_field=True, verbose_name='Page body'),
        ),
        migrations.AlterField(
            model_name='supporterspage',
            name='supporters',
            field=wagtail.fields.StreamField([('category', wagtail.blocks.StructBlock([('heading_text', wagtail.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.blocks.ChoiceBlock(blank=True, choices=[('', 'Select a header size'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4')], required=False))])), ('supporter', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=100)), ('summary', wagtail.blocks.TextBlock()), ('logo', wagtail.images.blocks.ImageChooserBlock(required=False)), ('url', wagtail.blocks.URLBlock(required=False))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='teampage',
            name='group1_members',
            field=wagtail.fields.StreamField([('member', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=50)), ('role', wagtail.blocks.CharBlock(max_length=50, required=False)), ('role_since', wagtail.blocks.CharBlock(max_length=50, required=False)), ('location', wagtail.blocks.CharBlock(max_length=50, required=False)), ('pets', wagtail.blocks.CharBlock(max_length=200, required=False)), ('bio', wagtail.blocks.RichTextBlock(required=False)), ('photo', wagtail.images.blocks.ImageChooserBlock(help_text='Image should be at least 350px x 350px', required=False))]))], blank=True, use_json_field=True, verbose_name='members'),
        ),
        migrations.AlterField(
            model_name='teampage',
            name='group2_members',
            field=wagtail.fields.StreamField([('member', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=50)), ('role', wagtail.blocks.CharBlock(max_length=50, required=False)), ('role_since', wagtail.blocks.CharBlock(max_length=50, required=False)), ('location', wagtail.blocks.CharBlock(max_length=50, required=False)), ('pets', wagtail.blocks.CharBlock(max_length=200, required=False)), ('bio', wagtail.blocks.RichTextBlock(required=False)), ('photo', wagtail.images.blocks.ImageChooserBlock(help_text='Image should be at least 350px x 350px', required=False))]))], blank=True, use_json_field=True, verbose_name='members'),
        ),
        migrations.AlterField(
            model_name='teampage',
            name='group3_members',
            field=wagtail.fields.StreamField([('member', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=50)), ('role', wagtail.blocks.CharBlock(max_length=50, required=False)), ('role_since', wagtail.blocks.CharBlock(max_length=50, required=False)), ('location', wagtail.blocks.CharBlock(max_length=50, required=False)), ('pets', wagtail.blocks.CharBlock(max_length=200, required=False)), ('bio', wagtail.blocks.RichTextBlock(required=False)), ('photo', wagtail.images.blocks.ImageChooserBlock(help_text='Image should be at least 350px x 350px', required=False))]))], blank=True, use_json_field=True, verbose_name='members'),
        ),
    ]
